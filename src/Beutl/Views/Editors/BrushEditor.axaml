<UserControl x:Class="Beutl.Views.Editors.BrushEditor"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="using:FluentIcons.FluentAvalonia"
             xmlns:lang="using:Beutl.Language"
             xmlns:local="using:Beutl.Views.Editors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:vm="using:Beutl.ViewModels.Editors"
             x:Name="root"
             d:DesignHeight="300"
             d:DesignWidth="300"
             x:CompileBindings="True"
             x:DataType="vm:BrushEditorViewModel"
             mc:Ignorable="d">
    <Grid RowDefinitions="Auto,Auto">
        <ToggleButton x:Name="expandToggle"
                      Margin="8,4"
                      Content="{Binding Header, FallbackValue=Brush}"
                      FontWeight="DemiBold"
                      IsChecked="{Binding IsExpanded.Value}"
                      Theme="{DynamicResource PropertyEditorMiniExpanderToggleButton}">
            <ToggleButton.Tag>
                <Button Padding="0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Classes="size-24x24"
                        Click="Menu_Click"
                        Theme="{StaticResource TransparentButton}">
                    <Button.ContextFlyout>
                        <ui:FAMenuFlyout>
                            <ui:RadioMenuFlyoutItem Click="ChangeBrushType"
                                                    IsChecked="{Binding IsSolid.Value, Mode=OneWay}"
                                                    Tag="Solid"
                                                    Text="{x:Static lang:Strings.Brush_Solid}" />
                            <ui:RadioMenuFlyoutItem Click="ChangeBrushType"
                                                    IsChecked="{Binding IsLinearGradient.Value, Mode=OneWay}"
                                                    Tag="LinearGradient"
                                                    Text="{x:Static lang:Strings.Brush_LinearGradient}" />
                            <ui:RadioMenuFlyoutItem Click="ChangeBrushType"
                                                    IsChecked="{Binding IsConicGradient.Value, Mode=OneWay}"
                                                    Tag="ConicGradient"
                                                    Text="{x:Static lang:Strings.Brush_ConicalGradient}" />
                            <ui:RadioMenuFlyoutItem Click="ChangeBrushType"
                                                    IsChecked="{Binding IsRadialGradient.Value, Mode=OneWay}"
                                                    Tag="RadialGradient"
                                                    Text="{x:Static lang:Strings.Brush_RadialGradient}" />
                            <ui:RadioMenuFlyoutItem Click="ChangeBrushType"
                                                    IsChecked="{Binding IsPerlinNoise.Value, Mode=OneWay}"
                                                    Tag="PerlinNoise"
                                                    Text="{x:Static lang:Strings.Brush_PerlinNoise}" />
                            <ui:RadioMenuFlyoutItem Click="ChangeBrushType"
                                                    IsChecked="{Binding !Value.Value, Mode=OneWay}"
                                                    Tag="Null"
                                                    Text="Null" />
                        </ui:FAMenuFlyout>
                    </Button.ContextFlyout>
                    <icons:SymbolIcon Symbol="Compose" />
                </Button>
            </ToggleButton.Tag>
        </ToggleButton>

        <Panel x:Name="content"
               Grid.Row="1"
               Margin="16,0,0,0">
            <TextBlock IsVisible="{Binding Value.Value, Converter={x:Static ObjectConverters.IsNull}}" Text="{x:Static lang:Message.Property_is_unset}" />

            <local:PropertiesEditor Padding="0"
                                    DataContext="{Binding ChildContext.Value}"
                                    IsEnabled="{ReflectionBinding #root.DataContext.CanEdit.Value}"
                                    IsVisible="{ReflectionBinding #root.DataContext.Value.Value,
                                                                  Converter={x:Static ObjectConverters.IsNotNull}}" />
        </Panel>
    </Grid>
</UserControl>
