<UserControl x:Class="Beutl.Views.MainView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="using:Beutl.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="using:FluentIcons.FluentAvalonia"
             xmlns:interactivity="using:Avalonia.Xaml.Interactivity"
             xmlns:lang="using:Beutl.Language"
             xmlns:local="using:Beutl.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pages="using:Beutl.Pages"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
             xmlns:vm="using:Beutl.ViewModels"
             xmlns:wnd="using:FluentAvalonia.UI.Windowing"
             x:Name="root"
             Padding="0"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:DataType="vm:MainViewModel"
             Focusable="True"
             mc:Ignorable="d">

    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>

    <UserControl.Styles>
        <Style Selector="FlyoutPresenter.HiddenNotificationPadding0">
            <Setter Property="Padding" Value="0" />
        </Style>
    </UserControl.Styles>

    <Grid RowDefinitions="Auto,*">
        <Grid x:Name="Titlebar" ColumnDefinitions="Auto,Auto,Auto,*">
            <Image MaxWidth="24"
                   Name="WindowIcon"
                   MaxHeight="24"
                   Margin="8,0"
                   VerticalAlignment="Center"
                   RenderOptions.BitmapInterpolationMode="HighQuality"
                   Source="avares://Beutl.Controls/Assets/logo.ico">
                <Image.Clip>
                    <EllipseGeometry RadiusX="12"
                                     RadiusY="12"
                                     Rect="0,0,24,24" />
                </Image.Clip>
            </Image>

            <Menu x:Name="MenuBar"
                  Grid.Column="1"
                  wnd:AppWindow.AllowInteractionInTitleBar="True">
                <!--  ファイル  -->
                <MenuItem Header="{x:Static lang:Strings.File}">
                    <!--  新規作成  -->
                    <MenuItem Header="{x:Static lang:Strings.CreateNew}">
                        <MenuItem.Icon>
                            <icons:SymbolIcon Symbol="New" />
                        </MenuItem.Icon>
                        <!--  プロジェクト  -->
                        <MenuItem Command="{CompiledBinding MenuBar.CreateNewProject}"
                                  Header="{x:Static lang:Strings.CreateNewProject}"
                                  InputGesture="{DynamicResource CreateNewProjectKeyGesture}" />
                        <!--  ファイル  -->
                        <MenuItem Command="{CompiledBinding MenuBar.CreateNew}"
                                  Header="{x:Static lang:Strings.CreateNewScene}"
                                  InputGesture="{DynamicResource CreateNewKeyGesture}" />
                    </MenuItem>
                    <Separator />
                    <!--  開く  -->
                    <MenuItem Header="{x:Static lang:Strings.Open}">
                        <MenuItem.Icon>
                            <icons:SymbolIcon Symbol="Open" />
                        </MenuItem.Icon>
                        <!--  プロジェクト  -->
                        <MenuItem Command="{CompiledBinding MenuBar.OpenProject}"
                                  Header="{x:Static lang:Strings.Project}"
                                  InputGesture="{DynamicResource OpenProjectKeyGesture}" />
                        <!--  ファイル  -->
                        <MenuItem Command="{CompiledBinding MenuBar.OpenFile}"
                                  Header="{x:Static lang:Strings.File}"
                                  InputGesture="{DynamicResource OpenKeyGesture}" />
                    </MenuItem>
                    <Separator />
                    <!--  閉じる  -->
                    <MenuItem Command="{CompiledBinding MenuBar.CloseFile}" Header="{x:Static lang:Strings.Close}" />
                    <!--  プロジェクトを閉じる  -->
                    <MenuItem Command="{CompiledBinding MenuBar.CloseProject}"
                              Header="{x:Static lang:Strings.CloseProject}"
                              IsEnabled="{CompiledBinding IsProjectOpened.Value}" />
                    <Separator />
                    <!--  上書き保存  -->
                    <MenuItem Command="{CompiledBinding MenuBar.Save}"
                              Header="{x:Static lang:Strings.Save}"
                              InputGesture="{DynamicResource SaveKeyGesture}"
                              IsEnabled="{CompiledBinding IsProjectOpened.Value}">
                        <MenuItem.Icon>
                            <icons:SymbolIcon Symbol="Save" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <!--  すべて保存  -->
                    <MenuItem Command="{CompiledBinding MenuBar.SaveAll}"
                              Header="{x:Static lang:Strings.SaveAll}"
                              InputGesture="{DynamicResource SaveAllKeyGesture}"
                              IsEnabled="{CompiledBinding IsProjectOpened.Value}">
                        <MenuItem.Icon>
                            <icons:SymbolIcon Symbol="SaveMultiple" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <!--  最近使ったプロジェクト  -->
                    <MenuItem x:Name="recentFiles" Header="{x:Static lang:Strings.RecentFiles}" />
                    <MenuItem x:Name="recentProjects" Header="{x:Static lang:Strings.RecentProjects}" />

                    <Separator />
                    <!--  終了  -->
                    <MenuItem Command="{CompiledBinding MenuBar.Exit}"
                              Header="{x:Static lang:Strings.Exit}"
                              InputGesture="{DynamicResource ExitKeyGesture}" />
                </MenuItem>
                <!--  編集  -->
                <MenuItem Header="{x:Static lang:Strings.Edit}">
                    <!--  元に戻す  -->
                    <MenuItem Command="{CompiledBinding MenuBar.Undo}"
                              Header="{x:Static lang:Strings.Undo}"
                              InputGesture="{DynamicResource UndoKeyGesture}"
                              IsEnabled="{CompiledBinding IsProjectOpened.Value}">
                        <MenuItem.Icon>
                            <icons:SymbolIcon Symbol="ArrowUndo" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <!--  やり直し  -->
                    <MenuItem Command="{CompiledBinding MenuBar.Redo}"
                              Header="{x:Static lang:Strings.Redo}"
                              InputGesture="{DynamicResource RedoKeyGesture}"
                              IsEnabled="{CompiledBinding IsProjectOpened.Value}">
                        <MenuItem.Icon>
                            <icons:SymbolIcon Symbol="ArrowRedo" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <!--  表示  -->
                <MenuItem x:Name="viewMenuItem" Header="{x:Static lang:Strings.View}">
                    <MenuItem x:Name="editorTabMenuItem" Header="{x:Static lang:Strings.Editors}" />
                    <MenuItem x:Name="toolTabMenuItem" Header="{x:Static lang:Strings.Tools}" />
                </MenuItem>
                <!--  プロジェクト  -->
                <MenuItem Header="{x:Static lang:Strings.Project}">
                    <MenuItem Command="{CompiledBinding MenuBar.AddToProject}" Header="{x:Static lang:Strings.Add}" />
                    <MenuItem Command="{CompiledBinding MenuBar.RemoveFromProject}" Header="{x:Static lang:Strings.Remove}" />
                </MenuItem>
                <!--  シーン  -->
                <MenuItem Header="{x:Static lang:Strings.Scene}">
                    <MenuItem Command="{CompiledBinding MenuBar.NewScene}" Header="{x:Static lang:Strings.CreateNew}" />
                    <MenuItem Command="{CompiledBinding MenuBar.ShowSceneSettings}" Header="{x:Static lang:Strings.SceneSettings}" />
                    <!--  要素  -->
                    <MenuItem Header="{x:Static lang:Strings.Element}">
                        <MenuItem Command="{CompiledBinding MenuBar.AddLayer}" Header="{x:Static lang:Strings.Add}" />
                        <MenuItem Command="{CompiledBinding MenuBar.DeleteLayer}" Header="{x:Static lang:Strings.Delete}" />
                        <MenuItem Command="{CompiledBinding MenuBar.ExcludeLayer}" Header="{x:Static lang:Strings.Exclude}" />
                        <MenuItem Command="{CompiledBinding MenuBar.CutLayer}" Header="{x:Static lang:Strings.Cut}" />
                        <MenuItem Command="{CompiledBinding MenuBar.CopyLayer}" Header="{x:Static lang:Strings.Copy}" />
                        <MenuItem Command="{CompiledBinding MenuBar.PasteLayer}" Header="{x:Static lang:Strings.Paste}" />
                    </MenuItem>
                </MenuItem>
                <!--  オブジェクト  -->
                <MenuItem Header="{x:Static lang:Strings.Object}" />
                <!--  ヘルプ  -->
                <MenuItem Header="{x:Static lang:Strings.Help}">
                    <MenuItem Click="GC_Collect_Click"
                              Header="GC.Collect"
                              IsVisible="{Binding IsDebuggerAttached}" />
                    <MenuItem Click="MonitorKeyModifier_Click"
                              Header="Monitor KeyModifier"
                              IsVisible="{Binding IsDebuggerAttached}" />
                    <MenuItem Click="ThrowUnhandledException_Click"
                              Header="Throw Unhandled Exception"
                              IsVisible="{Binding IsDebuggerAttached}" />
                    <MenuItem Click="GoToInfomationPage" Header="{x:Static lang:Strings.Info}" />
                </MenuItem>
            </Menu>


            <TextBlock Grid.Column="2"
                       Margin="8,0"
                       VerticalAlignment="Center"
                       Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                       Text="{Binding NameOfOpenProject.Value}" />

            <StackPanel Grid.Column="3"
                        Margin="0,0,16,0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Spacing="8">

                <TextBlock VerticalAlignment="Center"
                           Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                           IsVisible="{CompiledBinding IsDebuggerAttached}"
                           Text="Debug" />

                <Border Margin="4,0,0,0"
                        wnd:AppWindow.AllowInteractionInTitleBar="True"
                        Background="Transparent"
                        ToolTip.Tip="{x:Static lang:Strings.RunningStartupTasks}">
                    <ProgressRing Width="20"
                                  Height="20"
                                  MinWidth="0"
                                  MinHeight="0"
                                  BorderThickness="4"
                                  IsIndeterminate="{Binding IsRunningStartupTasks.Value}"
                                  IsVisible="{Binding IsRunningStartupTasks.Value}" />
                </Border>

                <Button x:Name="OpenNotificationsButton"
                        Margin="0,4"
                        VerticalAlignment="Stretch"
                        wnd:AppWindow.AllowInteractionInTitleBar="True"
                        Click="OpenNotificationsClick"
                        IsVisible="{Binding !!#HiddenNotificationPanel.Children.Count}"
                        Theme="{StaticResource TransparentButton}">
                    <Button.Flyout>
                        <Flyout FlyoutPresenterClasses="HiddenNotificationPadding8">
                            <ScrollViewer Margin="-8">
                                <StackPanel x:Name="HiddenNotificationPanel" Spacing="4" />
                            </ScrollViewer>
                        </Flyout>
                    </Button.Flyout>
                    <ui:InfoBadge Name="NotificationInfoBadge" Value="{Binding #HiddenNotificationPanel.Children.Count}" />
                </Button>
            </StackPanel>
        </Grid>

        <ui:NavigationView x:Name="Navi"
                           Grid.Row="1"
                           Classes="SideNavigationView"
                           IsSettingsVisible="False">
            <ui:NavigationView.FooterMenuItems>
                <ui:NavigationViewItem x:Name="SettingsPageItem"
                                       Classes="SideNavigationViewItem"
                                       Content="{x:Static lang:Strings.Settings}"
                                       DataContext="{CompiledBinding SettingsPage}">
                    <interactivity:Interaction.Behaviors>
                        <interactivity:BehaviorCollection>
                            <ctrl:NavItemHelper>
                                <ctrl:NavItemHelper.FilledIcon>
                                    <icons:SymbolIconSource Symbol="Settings" />
                                </ctrl:NavItemHelper.FilledIcon>
                                <ctrl:NavItemHelper.RegularIcon>
                                    <icons:SymbolIconSource Symbol="Settings" />
                                </ctrl:NavItemHelper.RegularIcon>
                            </ctrl:NavItemHelper>
                        </interactivity:BehaviorCollection>
                    </interactivity:Interaction.Behaviors>
                </ui:NavigationViewItem>
            </ui:NavigationView.FooterMenuItems>

            <ui:Frame x:Name="frame" />
        </ui:NavigationView>

        <StackPanel x:Name="NotificationPanel"
                    Grid.RowSpan="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Spacing="4">
            <StackPanel.Styles>
                <Style Selector="ui|InfoBar">
                    <Style Selector="^">
                        <Style.Animations>
                            <Animation FillMode="Forward" Duration="00:00:00.250">
                                <KeyFrame Cue="0%">
                                    <Setter Property="Opacity" Value="0.0" />
                                    <Setter Property="ScaleTransform.ScaleX" Value="1.05" />
                                    <Setter Property="ScaleTransform.ScaleY" Value="1.05" />
                                </KeyFrame>
                                <KeyFrame Cue="100%" KeySpline="0,0 0,1">
                                    <Setter Property="Opacity" Value="1.0" />
                                    <Setter Property="ScaleTransform.ScaleX" Value="1.00" />
                                    <Setter Property="ScaleTransform.ScaleY" Value="1.00" />
                                </KeyFrame>
                            </Animation>
                        </Style.Animations>
                    </Style>
                    <Style Selector="^:hidden">
                        <Style.Animations>
                            <Animation FillMode="Backward" Duration="00:00:00.167">
                                <KeyFrame Cue="0%">
                                    <Setter Property="Opacity" Value="1.0" />
                                    <Setter Property="ScaleTransform.ScaleX" Value="1.00" />
                                    <Setter Property="ScaleTransform.ScaleY" Value="1.00" />
                                </KeyFrame>
                                <KeyFrame Cue="100%" KeySpline="0,0 0,1">
                                    <Setter Property="Opacity" Value="0.0" />
                                    <Setter Property="ScaleTransform.ScaleX" Value="1.05" />
                                    <Setter Property="ScaleTransform.ScaleY" Value="1.05" />
                                </KeyFrame>
                            </Animation>
                        </Style.Animations>

                        <Style Selector="^ /template/ ui|FABorder#ContentRoot">
                            <Setter Property="IsVisible" Value="True" />
                        </Style>

                    </Style>
                </Style>
            </StackPanel.Styles>
        </StackPanel>
    </Grid>

</UserControl>
